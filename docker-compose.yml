version: '3.8'

services:
  dev:
    container_name: link_storage_api_dev
    image: link_storage-api-dev:latest
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile.dev
    env_file:
      - .env
    command: pnpm run start:dev
    ports:
      - 3000:3000
      # - 9229:9229
    networks:
      - link_storage-network
    depends_on:
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: always

  prod:
    container_name: link_storage_api_prod
    image: link_storage-api-prod
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    command: pnpm start:prod
    env_file:
      - .env
    ports:
      - 3000:3000
      - 9229:9229
    networks:
      - link_storage-network
    depends_on:
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped

  postgres:
    image: postgres:14.0
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - link_storage-network
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db

  postgres-tests:
    image: postgres:14.0
    ports:
      - 5438:5432
    volumes:
      - pgdata-test:/var/lib/postgresql/data
    networks:
      - link_storage-network
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test

networks:
  link_storage-network:

volumes:
  pgdata:
  pgdata-test:
# services:
#   api:
#     build:
#       context: .
#       dockerfile: dev.Dockerfile
#     env_file:
#       - .env
#     ports:
#       - '8080:3000'
#     volumes:
#       - ./:/app
#       - /app/node_modules

#   postgres:
#     image: postgres:14.0
#     ports:
#       - '35000:5432'
#     environment:
#       POSTGRES_USER: user
#       POSTGRES_PASSWORD: password
#       POSTGRES_DB: db
